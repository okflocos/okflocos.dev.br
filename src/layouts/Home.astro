---
import ToggleTheme from '@/components/ToggleTheme'
import BaseLayout from './BaseLayout.astro'
import config from '../config'

let avatar = 'https://chetxu.chetserenade.info/article/avatar.jpg'
---

<BaseLayout title={Astro.props.title ? `${Astro.props.title} | ${config.title}` : config.title}>
  <div>
    <div class="lg:flex home">
      <div id="pc-container" class="sm:px-10 lg:mt-10 py-20 desktop nav-view">
        <div class="sticky top-5 flex flex-col gap-4">
          <div class="w-32 h-32 bg-cover bg-center inline-block mx-auto">
            <img class="rounded" src={avatar} alt="头像" />
          </div>
          <div class="mediate" data-pagefind-ignore>
            <p class="font-bold text-2xl">{config.name}</p>
            <div class="text-gray-500 text-base font-light my-2">
              <div class="flex">
                <div id="theme">
                  <ToggleTheme />
                </div>
                <span class="ml-6 mt-1">{config.signature}</span>
              </div>
            </div>
          </div>

          <div class="flex lg:flex-col gap-4 mt-4 mx-auto nav-webfont" data-pagefind-ignore>
            {
              config.navs.map((nav) => {
                const { pathname } = Astro.url
                const trimmedPathname = pathname === '/' ? pathname : pathname.replace(/\/$/, '')
                const isActive = trimmedPathname === nav.url
                return (
                  <a
                    href={nav.url}
                    class:list={isActive ? 'active' : ''}
                    rel={nav.url.startsWith('http') ? 'noopener' : undefined}
                  >
                    {nav.title}
                  </a>
                )
              })
            }
          </div>
          <div class="text-slate-500 text-sm mediate" data-pagefind-ignore>
            Blog since {config.since}
          </div>
        </div>
      </div>

      <div id="mobile-container" class="sm:px-10 lg:mt-10 py-20 mobile mobile-menu opened">
        <div class="sticky top-5 flex flex-col gap-4">
          <div class="mediate">
            <div class="w-32 h-32 bg-cover bg-center inline-block mx-auto">
              <img class="rounded" src={avatar} alt="头像" />
            </div>
            <p class="font-bold text-2xl font-name">{config.name}</p>
            <div class="text-gray-400 text-base font-light my-2">
              <div class="flex">
                <div id="theme">
                  <ToggleTheme />
                </div>
                <span class="ml-6 mt-1" style="margin-left:24px">{config.signature}</span>
              </div>
            </div>
          </div>
          <div class="flex lg:flex-col gap-4 mt-4 mx-auto nav-webfont" data-pagefind-ignore>
            {
              config.navs.map((nav) => {
                const { pathname } = Astro.url
                const trimmedPathname = pathname === '/' ? pathname : pathname.replace(/\/$/, '')
                const isActive = trimmedPathname === nav.url
                return (
                  <a
                    href={nav.url}
                    class:list={isActive ? 'active' : ''}
                    rel={nav.url.startsWith('http') ? 'noopener' : undefined}
                  >
                    {nav.title}
                  </a>
                )
              })
            }
          </div>
          <div class="text-slate-500 text-sm mediate" data-pagefind-ignore>
            Blog since {config.since}
          </div>
        </div>
      </div>

      <div
        class="toggle bg-frostedGlass dark:bg-markerShadow mobile header-navbar"
        data-pagefind-ignore
      >
        <div class="toggle-menu" id="toggle"><i class="iconfont icon-menu"></i></div>
        <div class="header-slogan" data-pagefind-ignore>Jed's log</div>
        <div class="toggle-menu">
          <!-- <PageFind transition:persist /> -->
        </div>
      </div>

      <div id="shading" class="shading container-mains opened"></div>

      <div class="lg:mt-28 mx-4 mx-0 ml-52 md container-main opened">
        <div class="container">
          <slot />
        </div>
      </div>

      <div class="desktop">
        <slot name="catalogue" />
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // TODO: To be optimized
  document.addEventListener('astro:page-load', () => {
    const toggleButton = document.getElementById('toggle')
    const toggleshading = document.getElementById('shading')
    const mobileMenuSelector = '.mobile-menu'
    const containerMainSelector = '.container-main'
    const containerMainSelectors = '.container-mains'
    const headerNavbarSelector = '.header-navbar'
    const headerShading = '.shading'

    if (toggleButton) {
      toggleButton.addEventListener('click', () => {
        const mobileMenu = document.querySelector(mobileMenuSelector)
        const containerMain = document.querySelector(containerMainSelector)
        const containerMains = document.querySelector(containerMainSelectors)
        const headerNavbar = document.querySelector(headerNavbarSelector)
        const mobileheaderShading = document.querySelector(headerShading)

        mobileMenu?.classList.toggle('opened-pc')
        containerMain?.classList.toggle('opened-mobile')
        containerMains?.classList.toggle('opened-mobile')
        headerNavbar?.classList.toggle('opened-mobile')
        mobileheaderShading?.classList.toggle('close-mask')
      })
    }

    if (toggleshading) {
      toggleshading.addEventListener('click', () => {
        const mobileMenu = document.querySelector(mobileMenuSelector)
        const containerMain = document.querySelector(containerMainSelector)
        const containerMains = document.querySelector(containerMainSelectors)
        const headerNavbar = document.querySelector(headerNavbarSelector)
        const mobileheaderShading = document.querySelector(headerShading)

        mobileMenu?.classList.remove('opened-pc')
        containerMain?.classList.remove('opened-mobile')
        containerMains?.classList.remove('opened-mobile')
        headerNavbar?.classList.remove('opened-mobile')
        mobileheaderShading?.classList.remove('close-mask')
      })
    }

    function toggleView() {
      const pcContainer = document.getElementById('pc-container')
      const mobileContainer = document.getElementById('mobile-container')

      if (pcContainer && mobileContainer) {
        if (window.innerWidth > 1010) {
          pcContainer.style.display = 'block'
          mobileContainer.style.display = 'none'
          mobileContainer.innerHTML = ''
        } else {
          pcContainer.style.display = 'none'
          mobileContainer.style.display = 'block'
          pcContainer.innerHTML = ''
        }
      }
    }

    window.addEventListener('resize', toggleView)
    toggleView()
  })
</script>
